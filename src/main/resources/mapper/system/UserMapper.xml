<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.king.project.system.user.mapper.UserMapper">

	<resultMap type="User" id="UserResult">
		<id     property="userId"       column="user_id"      />
		<result property="deptId"       column="dept_id"      />
		<result property="loginName"    column="login_name"   />
		<result property="userName"     column="user_name"    />
		<result property="email"        column="email"        />
		<result property="phonenumber"  column="phonenumber"  />
		<result property="sex"          column="sex"          />
		<result property="avatar"       column="avatar"       />
		<result property="password"     column="password"     />
		<result property="salt"         column="salt"         />
		<result property="status"       column="status"       />
		<result property="deleted"      column="deleted"     />
		<result property="loginIp"      column="login_ip"     />
		<result property="loginDate"    column="login_date"   />
		<result property="createBy"     column="create_by"    />
		<result property="createTime"   column="create_time"  />
		<result property="updateBy"     column="update_by"    />
		<result property="updateTime"   column="update_time"  />
		<result property="remark"       column="remark"       />
		<association property="dept"    column="dept_id" javaType="Dept" resultMap="deptResult" />
		<collection  property="roles"   javaType="java.util.List"        resultMap="RoleResult" />
	</resultMap>

	<resultMap id="deptResult" type="Dept">
		<id     property="deptId"   column="dept_id"     />
		<result property="parentId" column="parent_id"   />
		<result property="deptName" column="dept_name"   />
		<result property="orderNum" column="order_num"   />
		<result property="leader"   column="leader"   />
		<result property="status"   column="dept_status" />
	</resultMap>

	<resultMap id="RoleResult" type="Role">
		<id     property="roleId"       column="role_id"        />
		<result property="roleName"     column="role_name"      />
		<result property="roleKey"      column="role_key"       />
		<result property="roleSort"     column="role_sort"      />
		<result property="dataScope"     column="data_scope"    />
		<result property="status"       column="role_status"    />
	</resultMap>

	<sql id="selectUserVo">
       select  sys_user.user_id, sys_user.dept_id, sys_user.login_name, sys_user.user_name, sys_user.email, sys_user.avatar, sys_user.phonenumber, sys_user.sex, sys_user.password, sys_user.salt, sys_user.status, sys_user.deleted, sys_user.login_ip, sys_user.login_date, sys_user.create_time, sys_user.remark,
       		     sys_dept.dept_id,  sys_dept.parent_id,  sys_dept.dept_name,  sys_dept.order_num,  sys_dept.leader,  sys_dept.status as dept_status,
       		    sys_role.role_id, sys_role.role_name, sys_role.role_key, sys_role.role_sort, sys_role.data_scope, sys_role.status as role_status
		from sys_user
			 left join sys_dept on sys_user.dept_id =  sys_dept.dept_id
			 left join sys_user_role on sys_user.user_id = sys_user_role.user_id
			 left join sys_role on sys_role.role_id = sys_user_role.role_id
    </sql>

    <select id="selectUserList" parameterType="User" resultMap="UserResult">
        select sys_user.user_id, sys_user.dept_id, sys_user.login_name, sys_user.user_name, sys_user.email, sys_user.avatar, sys_user.phonenumber, sys_user.password, sys_user.sex, sys_user.salt, sys_user.status, sys_user.deleted, sys_user.login_ip, sys_user.login_date, sys_user.create_by, sys_user.create_time, sys_user.remark, sys_dept.dept_name, sys_dept.leader from sys_user
        left join sys_dept on sys_user.dept_id = sys_dept.dept_id
        where sys_user.deleted = false
        <if test="loginName != null and loginName != ''">
            AND sys_user.login_name like concat('%', #{loginName}, '%')
        </if>
        <if test="status != null and status != ''">
            AND sys_user.status = #{status}
        </if>
        <if test="phonenumber != null and phonenumber != ''">
            AND sys_user.phonenumber like concat('%', #{phonenumber}, '%')
        </if>
        <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
            AND date_format(sys_user.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
        </if>
        <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
            AND date_format(sys_user.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
        </if>
        <if test="deptId != null and deptId != 0">
            AND (sys_user.dept_id = #{deptId} OR sys_user.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE FIND_IN_SET
            (#{deptId},ancestors) ))
        </if>
        <!-- 数据范围过滤 -->
        ${params.dataScope}
    </select>

    <select id="selectAllocatedList" parameterType="User" resultMap="UserResult">
        select distinct sys_user.user_id, sys_user.dept_id, sys_user.login_name, sys_user.user_name, sys_user.email, sys_user.avatar, sys_user.phonenumber, sys_user.status, sys_user.create_time
                from sys_user
        left join sys_dept on sys_user.dept_id = sys_dept.dept_id
        left join sys_user_role on sys_user.user_id = sys_user_role.user_id
        left join sys_role on sys_role.role_id = sys_user_role.role_id
        where sys_user.deleted = false and sys_role.role_id = #{roleId}
        <if test="loginName != null and loginName != ''">
            AND sys_user.login_name like concat('%', #{loginName}, '%')
        </if>
        <if test="phonenumber != null and phonenumber != ''">
            AND sys_user.phonenumber like concat('%', #{phonenumber}, '%')
        </if>
        <!-- 数据范围过滤 -->
        ${params.dataScope}
    </select>

    <select id="selectUnallocatedList" parameterType="User" resultMap="UserResult">
        select distinct sys_user.user_id, sys_user.dept_id, sys_user.login_name, sys_user.user_name, sys_user.email, sys_user.avatar, sys_user.phonenumber, sys_user.status, sys_user.create_time
                from sys_user
        left join sys_dept on sys_user.dept_id = sys_dept.dept_id
        left join sys_user_role on sys_user.user_id = sys_user_role.user_id
        left join sys_role on sys_role.role_id = sys_user_role.role_id
        where sys_user.deleted = false and (sys_role.role_id != #{roleId} or sys_role.role_id IS NULL)
        and sys_user.user_id not in (select sys_user.user_id from sys_user inner join sys_user_role on sys_user.user_id = sys_user_role.user_id and
        sys_user_role.role_id = #{roleId})
        <if test="loginName != null and loginName != ''">
            AND sys_user.login_name like concat('%', #{loginName}, '%')
        </if>
        <if test="phonenumber != null and phonenumber != ''">
            AND sys_user.phonenumber like concat('%', #{phonenumber}, '%')
        </if>
        <!-- 数据范围过滤 -->
        ${params.dataScope}
    </select>

    <select id="selectUserByLoginName" parameterType="String" resultMap="UserResult">
        <include refid="selectUserVo"/>
        where sys_user.login_name = #{userName}
    </select>

    <select id="selectUserByPhoneNumber" parameterType="String" resultMap="UserResult">
        <include refid="selectUserVo"/>
        where sys_user.phonenumber = #{phonenumber}
    </select>

    <select id="selectUserByEmail" parameterType="String" resultMap="UserResult">
        <include refid="selectUserVo"/>
        where sys_user.email = #{email}
    </select>

    <select id="selectUserById" parameterType="Long" resultMap="UserResult">
        <include refid="selectUserVo"/>
        where sys_user.user_id = #{userId}
    </select>

</mapper>